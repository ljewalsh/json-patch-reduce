{"version":3,"sources":["test.js"],"names":["t","patch","expectedPath","reducedPath","reducePath","deepEqual"],"mappings":";;AAAA;;AACA;;;;AAEA,kBAAK,6FAAL,EAAoGA,CAAC,IAAI;AAErG,QAAMC,KAAK,GAAG,CACV;AAAE,UAAM,KAAR;AAAe,YAAQ,MAAvB;AAA+B,aAAS;AAAxC,GADU,EAGV;AAAE,UAAM,KAAR;AAAe,YAAQ,MAAvB;AAA+B,aAAS;AAAxC,GAHU,EAKV;AAAE,UAAM,QAAR;AAAkB,YAAQ;AAA1B,GALU,CAAd;AAQA,QAAMC,YAAY,GAAG,CACjB;AAAE,UAAM,KAAR;AAAe,YAAQ,MAAvB;AAA+B,aAAS;AAAxC,GADiB,CAArB;AAIA,QAAMC,WAAW,GAAGC,UAAU,CAACH,KAAD,CAA9B;AAEAD,EAAAA,CAAC,CAACK,SAAF,CAAYH,YAAZ,EAA0BC,WAA1B;AACH,CAjBD","sourceRoot":"/Users/lucy-janewalsh/belina","sourcesContent":["import test from 'ava'\nimport reducePatch from './'\n\ntest('both the add and remove operations for a path are stripped out when a path is to be removed', t => {\n\n    const patch = [\n        { \"op\": \"add\", \"path\": \"/foo\", \"value\": \"bar\" },\n\n        { \"op\": \"add\", \"path\": \"/bar\", \"value\": \"baz\" },\n\n        { \"op\": \"remove\", \"path\": \"/foo\" }\n    ]\n\n    const expectedPath = [\n        { \"op\": \"add\", \"path\": \"/bar\", \"value\": \"baz\" }\n    ]\n\n    const reducedPath = reducePath(patch)\n\n    t.deepEqual(expectedPath, reducedPath)\n})\n\n"]}